import { Component, ChangeDetectorRef, OnInit, OnDestroy } from '@angular/core';
import { Router, NavigationEnd, ActivatedRoute, RouteConfigLoadStart, RouteConfigLoadEnd } from '@angular/router';
import { LoaderService } from './core/loader/loader-service';
import { HomeService } from './home/services/home.service';
import { Subscription } from 'rxjs';


@Component({
  selector: 'app-root',
  templateUrl: './app.component.html',
  styleUrls: ['./app.component.scss']
})
export class AppComponent implements OnInit, OnDestroy {
  isHome: boolean;
  isLoading: boolean;
  countrycode: any;
  errorMsg: string;
  bannerurl: string;
  profileurl: string;
  private subscription: Subscription;
  constructor(private router: Router, private homeservice: HomeService, private loaderService: LoaderService,
    private cdr: ChangeDetectorRef
  ) {
    this.router.events.subscribe((event) => {
      if (event instanceof NavigationEnd) {
        this.isHome = this.router.url === '/home' ? true : false;
      }
      if (event instanceof RouteConfigLoadStart) {
        this.isLoading = true;
      } else if (event instanceof RouteConfigLoadEnd) {
        this.isLoading = false;
      }
    });
    this.subscription = this.loaderService.isLoading().subscribe(loading => {
      this.isLoading = loading;
    });

  }
  ngOnInit() {
    
    this.bannerurl = localStorage.getItem("bannerurl") || 'src/assets/images/banner_uae.svg';
  }
  
  ngOnDestroy() {
    this.subscription.unsubscribe();
  }

}

-------------------------------------------------------------------------

import { Injectable } from '@angular/core';
import { Subject, Observable } from 'rxjs';

@Injectable({ providedIn: 'root' })
export class LoaderService {
    private readonly isLoadingSrc = new Subject<boolean>();

    isLoading() {
        return this.isLoadingSrc.asObservable();
    }

    showLoader() {
        this.isLoadingSrc.next(true);
    }

    hideLoader() {
        this.isLoadingSrc.next(false);
    }

}
